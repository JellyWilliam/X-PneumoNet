# Название всех моделей
models_names = [
    'convnext',
    'densenet161',
    'efficientnet',
    'efficientnet_v2',
    'googlenet',
    'inception_v3',
    'maxvit',
    'mnasnet',
    'mobilenet_v3',
    'regnet_x_16gf',
    'regnet_y_128gf',
    'regnet_y_16gf',
    'regnet_y_16gf_E2E',
    'regnet_y_32gf',
    'regnet_y_32gf_E2E',
    'resnet152',
    'resnet50',
    'resnext101_64x4d',
    'shufflenet_v2',
    'swin_v2',
    'vit_b_16',
    'vit_b_16_E2E',
    'vit_h_14',
    'vit_l_16',
    'wide_resnet101',
    'wide_resnet50'
]

# Ключ на последний слой модели
last_layer_replace_dict = {
    'convnext': 'classifier.2',
    'densenet161': 'classifier',
    'efficientnet': 'classifier.1',
    'efficientnet_v2': 'classifier.1',
    'googlenet': 'fc',
    'inception_v3': 'fc',
    'maxvit': 'classifier.5',
    'mnasnet': 'classifier.1',
    'mobilenet_v3': 'classifier.3',
    'regnet_x_16gf': 'fc',
    'regnet_y_128gf': 'fc',
    'regnet_y_16gf': 'fc',
    'regnet_y_16gf_E2E': 'fc',
    'regnet_y_32gf': 'fc',
    'regnet_y_32gf_E2E': 'fc',
    'resnet152': 'fc',
    'resnet50': 'fc',
    'resnext101_64x4d': 'fc',
    'shufflenet_v2': 'fc',
    'swin_v2': 'head',
    'vit_b_16': 'heads.head',
    'vit_b_16_E2E': 'heads.head',
    'vit_h_14': 'heads.head',
    'vit_l_16': 'heads.head',
    'wide_resnet101': 'fc',
    'wide_resnet50': 'fc'
}

# Название модели при импорте
get_models_dict = {
    'convnext': 'convnext_large',
    'densenet161': 'densenet161',
    'efficientnet': 'efficientnet_b7',
    'efficientnet_v2': 'efficientnet_v2_l',
    'googlenet': 'googlenet',
    'inception_v3': 'inception_v3',
    'maxvit': 'maxvit_t',
    'mnasnet': 'mnasnet1_3',
    'mobilenet_v3': 'mobilenet_v3_large',
    'regnet_x_16gf': 'regnet_x_16gf',
    'regnet_y_128gf': 'regnet_y_128gf',
    'regnet_y_16gf': 'regnet_y_16gf',
    'regnet_y_16gf_E2E': 'regnet_y_16gf',
    'regnet_y_32gf': 'regnet_y_32gf',
    'regnet_y_32gf_E2E': 'regnet_y_32gf',
    'resnet152': 'resnet152',
    'resnet50': 'resnet50',
    'resnext101_64x4d': 'resnext101_64x4d',
    'shufflenet_v2': 'shufflenet_v2_x2_0',
    'swin_v2': 'swin_v2_b',
    'vit_b_16': 'vit_b_16',
    'vit_b_16_E2E': 'vit_b_16',
    'vit_h_14': 'vit_h_14',
    'vit_l_16': 'vit_l_16',
    'wide_resnet101': 'wide_resnet101_2',
    'wide_resnet50': 'wide_resnet50_2'
}

# Название весов при импорте
get_weights_dict = {
    'convnext_large_weights': 'ConvNeXt_Large_Weights',
    'densenet161_weights': 'DenseNet161_Weights',
    'efficientnet_b7_weights': 'EfficientNet_B7_Weights',
    'efficientnet_v2_l_weights': 'EfficientNet_V2_L_Weights',
    'googlenet_weights': 'GoogLeNet_Weights',
    'inception_v3_weights': 'Inception_V3_Weights',
    'mnasnet1_3_weights': 'MNASNet1_3_Weights',
    'mobilenet_v3_large_weights': 'MobileNet_V3_Large_Weights',
    'regnet_y_16gf_weights': 'RegNet_Y_16GF_Weights',
    'regnet_y_32gf_weights': 'RegNet_Y_32GF_Weights',
    'regnet_y_128gf_weights': 'RegNet_Y_128GF_Weights',
    'regnet_x_16gf_weights': 'RegNet_X_16GF_Weights',
    'resnet50_weights': 'ResNet50_Weights',
    'resnet152_weights': 'ResNet152_Weights',
    'resnext101_64x4d_weights': 'ResNeXt101_64X4D_Weights',
    'wide_resnet50_2_weights': 'Wide_ResNet50_2_Weights',
    'wide_resnet101_2_weights': 'Wide_ResNet101_2_Weights',
    'shufflenet_v2_x2_0_weights': 'ShuffleNet_V2_X2_0_Weights',
    'vit_b_16_weights': 'ViT_B_16_Weights',
    'vit_l_16_weights': 'ViT_L_16_Weights',
    'vit_h_14_weights': 'ViT_H_14_Weights',
    'swin_v2_b_weights': 'Swin_V2_B_Weights',
    'maxvit_t_weights': 'MaxVit_T_Weights',
}
